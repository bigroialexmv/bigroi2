-- https://www.wwwmaster.ru/13-internet-i-bazy-dannyh-chast-02-normalizaciya-bazy-dannyh

SELECT * FROM USER;
UPDATE USER SET PHONE='+375292222221', UPDT_TMS=CURRENT_TIMESTAMP WHERE USER_ID=2;


START TRANSACTION;
INSERT INTO USER (FIRST_NAME, LAST_NAME, EMAIL, PHONE, CRTD_TMS, UPDT_TMS) 
 VALUES ('Kurt', 'Moss', 'kurt@bigroi.by', '+375293333333', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP);
COMMIT;

SELECT * FROM USER_ADDRESS;
INSERT INTO USER_ADDRESS (USER_ID, STREET_ADDR, CITY) VALUES (1, 'пр-т Дзержинского, 155-16', 'Минск');
INSERT INTO USER_ADDRESS (USER_ID, STREET_ADDR, CITY) VALUES (1, 'ул. Я. Коласа, 1', 'Минск');

INSERT INTO USER_ADDRESS (USER_ID, STREET_ADDR, CITY) VALUES (2, 'ул. Я. Коласа, 2', 'Минск');

SELECT * FROM PRODUCT;

SELECT * FROM PRODUCT WHERE PRICE=1190;

SELECT COUNT(*) FROM PRODUCT;

SELECT MAX(PRICE) FROM PRODUCT;

SELECT MAX(PRICE), CODE, NAME FROM PRODUCT;

SELECT MIN(PRICE), CODE, NAME 
	FROM PRODUCT 
	WHERE NAME LIKE '%iP%';
	

SELECT MIN(PRICE) AS PRICE, CODE, NAME, 'MIN' AS PRICE_TYPE 
		FROM PRODUCT 
		WHERE NAME LIKE '%iP%'
UNION
SELECT MAX(PRICE) AS PRICE, CODE, NAME, 'MAX' AS PRICE_TYPE
		FROM PRODUCT 
		WHERE NAME LIKE '%iP%';
		
-- DELETE FROM PURCHASE_ORDER;
SELECT * FROM PURCHASE_ORDER;
SELECT * FROM PURCHASE_ORDER_PRODUCT;

SELECT CODE, NAME, PRICE FROM PRODUCT WHERE CODE=30

INSERT INTO PURCHASE_ORDER(USER_ID, DLRY_ADDR_ID, DLRY_DATE, CRTD_TMS)
VALUES (1, 1, '2017-06-27', CURRENT_TIMESTAMP);

INSERT INTO PURCHASE_ORDER_PRODUCT(ORDER_ID, PRODUCT_CODE, PRODUCT_PRICE, PRODUCT_QUANTITY)
VALUES (3, 31, (SELECT PRICE FROM PRODUCT WHERE CODE=25), 2);

SELECT POP.ORDER_ID, PO.STATUS_CD AS ORDER_STATUS_CD, P.NAME AS PRODUCT_NAME, P.CODE AS PRODUCT_CODE, POP.PRODUCT_PRICE, POP.PRODUCT_QUANTITY 
FROM PURCHASE_ORDER_PRODUCT AS POP
INNER JOIN PRODUCT AS P
	ON POP.PRODUCT_CODE=P.CODE
INNER JOIN PURCHASE_ORDER AS PO
	ON POP.ORDER_ID=PO.ORDER_ID;
	
-- Сумма всех заказов
SELECT SUM(PRODUCT_PRICE * (1+ DISCOUNT/100)) FROM PURCHASE_ORDER_PRODUCT;

SELECT SUM(PRODUCT_PRICE * (1+ DISCOUNT/100)) FROM PURCHASE_ORDER_PRODUCT WHERE ORDER_ID=2;

SELECT SUM(PRODUCT_PRICE * (1+ DISCOUNT/100)), ORDER_ID 
FROM PURCHASE_ORDER_PRODUCT
GROUP BY ORDER_ID;

-- Товар с максимальной ценой для каждого заказа
SELECT MAX_PRICE, POP.PRODUCT_CODE, P.NAME
FROM PURCHASE_ORDER_PRODUCT AS POP
INNER JOIN (
	SELECT 
		MAX(PRODUCT_PRICE) AS MAX_PRICE, ORDER_ID 
	FROM PURCHASE_ORDER_PRODUCT
	GROUP BY ORDER_ID
) AS M ON POP.ORDER_ID=M.ORDER_ID AND M.MAX_PRICE=POP.PRODUCT_PRICE
INNER JOIN PRODUCT AS P ON P.CODE=POP.PRODUCT_CODE
GROUP BY POP.ORDER_ID
;

-- Товары с максимальной ценой для каждого заказа (если у заказа есть более одного товара с максимальной ценой)
SELECT POP.ORDER_ID, POP.PRODUCT_PRICE, POP.PRODUCT_CODE, P.NAME
FROM PURCHASE_ORDER_PRODUCT AS POP
INNER JOIN PRODUCT AS P ON P.CODE=POP.PRODUCT_CODE
WHERE (POP.PRODUCT_PRICE, ORDER_ID) IN (
	SELECT 
		MAX(PRODUCT_PRICE) AS MAX_PRICE, ORDER_ID 
	FROM PURCHASE_ORDER_PRODUCT
	GROUP BY ORDER_ID
)
;

SELECT SUM(PRODUCT_QUANTITY), ORDER_ID 
FROM PURCHASE_ORDER_PRODUCT
GROUP BY ORDER_ID;

SELECT SUM(PRODUCT_QUANTITY), ORDER_ID 
FROM PURCHASE_ORDER_PRODUCT
GROUP BY ORDER_ID
HAVING SUM(PRODUCT_QUANTITY) >= 2;


